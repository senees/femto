use super::__bid128;
use crate::BID128;

#[rustfmt::skip]
pub const BID_POWER10_TABLE_128: [BID128; 39] = [
  __bid128!(0x0000000000000001, 0x0000000000000000), //  10^0
  __bid128!(0x000000000000000A, 0x0000000000000000), //  10^1
  __bid128!(0x0000000000000064, 0x0000000000000000), //  10^2
  __bid128!(0x00000000000003E8, 0x0000000000000000), //  10^3
  __bid128!(0x0000000000002710, 0x0000000000000000), //  10^4
  __bid128!(0x00000000000186A0, 0x0000000000000000), //  10^5
  __bid128!(0x00000000000F4240, 0x0000000000000000), //  10^6
  __bid128!(0x0000000000989680, 0x0000000000000000), //  10^7
  __bid128!(0x0000000005F5E100, 0x0000000000000000), //  10^8
  __bid128!(0x000000003B9ACA00, 0x0000000000000000), //  10^9
  __bid128!(0x00000002540BE400, 0x0000000000000000), // 10^10
  __bid128!(0x000000174876E800, 0x0000000000000000), // 10^11
  __bid128!(0x000000E8D4A51000, 0x0000000000000000), // 10^12
  __bid128!(0x000009184E72A000, 0x0000000000000000), // 10^13
  __bid128!(0x00005AF3107A4000, 0x0000000000000000), // 10^14
  __bid128!(0x00038D7EA4C68000, 0x0000000000000000), // 10^15
  __bid128!(0x002386F26FC10000, 0x0000000000000000), // 10^16
  __bid128!(0x016345785D8A0000, 0x0000000000000000), // 10^17
  __bid128!(0x0DE0B6B3A7640000, 0x0000000000000000), // 10^18
  __bid128!(0x8AC7230489E80000, 0x0000000000000000), // 10^19
  __bid128!(0x6BC75E2D63100000, 0x0000000000000005), // 10^20
  __bid128!(0x35C9ADC5DEA00000, 0x0000000000000036), // 10^21
  __bid128!(0x19E0C9BAB2400000, 0x000000000000021E), // 10^22
  __bid128!(0x02C7E14AF6800000, 0x000000000000152D), // 10^23
  __bid128!(0x1BCECCEDA1000000, 0x000000000000D3C2), // 10^24
  __bid128!(0x161401484A000000, 0x0000000000084595), // 10^25
  __bid128!(0xDCC80CD2E4000000, 0x000000000052B7D2), // 10^26
  __bid128!(0x9FD0803CE8000000, 0x00000000033B2E3C), // 10^27
  __bid128!(0x3E25026110000000, 0x00000000204FCE5E), // 10^28
  __bid128!(0x6D7217CAA0000000, 0x00000001431E0FAE), // 10^29
  __bid128!(0x4674EDEA40000000, 0x0000000C9F2C9CD0), // 10^30
  __bid128!(0xC0914B2680000000, 0x0000007E37BE2022), // 10^31
  __bid128!(0x85ACEF8100000000, 0x000004EE2D6D415B), // 10^32
  __bid128!(0x38C15B0A00000000, 0x0000314DC6448D93), // 10^33
  __bid128!(0x378D8E6400000000, 0x0001ED09BEAD87C0), // 10^34
  __bid128!(0x2B878FE800000000, 0x0013426172C74D82), // 10^35
  __bid128!(0xB34B9F1000000000, 0x00C097CE7BC90715), // 10^36
  __bid128!(0x00F436A000000000, 0x0785EE10D5DA46D9), // 10^37
  __bid128!(0x098A224000000000, 0x4B3B4CA85A86C47A), // 10^38
];
